sonarr:
  Image: 'lscr.io/linuxserver/sonarr:latest' 
  Service:
      port: 8989
  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: true
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  Ingress:
    Enable: true
    Host: sonarr.thelmalouise.ddns.net
    EnableOauth: true
    prefix: ""
  Volumes:
        config:
          type: volumenClain
          mountPath: /config
        serie:
          type: nfs
          mountPath: /tv
          server: 192.168.18.10
          path: /volume1/Multimedia/Series
        descargas:
          type: nfs 
          mountPath: /downloads
          server: 192.168.18.10
          path: /volume1/Descargas
  ConfigMap:
    config.xml: |
      <Config>
        <BindAddress>*</BindAddress>
        <Port>8989</Port>
        <SslPort>9898</SslPort>
        <EnableSsl>False</EnableSsl>
        <LaunchBrowser>True</LaunchBrowser>
        <ApiKey>f5f9d20016584ea3acbf58d1c6945e26</ApiKey>
        <AuthenticationMethod>External</AuthenticationMethod>
        <AuthenticationRequired>Enabled</AuthenticationRequired>
        <Branch>main</Branch>
        <LogLevel>info</LogLevel>
        <SslCertPath></SslCertPath>
        <SslCertPassword></SslCertPassword>
        <UrlBase></UrlBase>
        <InstanceName>Sonarr</InstanceName>
        <UpdateMechanism>Docker</UpdateMechanism>
        <AnalyticsEnabled>False</AnalyticsEnabled>
        <PostgresUser>sonarr</PostgresUser>
        <PostgresPassword>buNCY%T!!8DRW#</PostgresPassword>
        <PostgresPort>5432</PostgresPort>
        <PostgresHost>192.168.18.10</PostgresHost>
      </Config>
  
radarr:
  Image: 'lscr.io/linuxserver/radarr:latest' 
  Service:
      port: 7878
  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: true
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  Ingress:
    Enable: true
    Host: radarr.thelmalouise.ddns.net
    EnableOauth: true
    prefix: ""
  Volumes:
        config:
          type: volumenClain
          mountPath: /config
        serie:
          type: nfs
          mountPath: /movies
          server: 192.168.18.10
          path: /volume1/Multimedia/Peliculas
        descargas:
          type: nfs 
          mountPath: /downloads
          server: 192.168.18.10
          path: /volume1/Descargas
  ConfigMap:
    config.xml: |
      <Config>
        <BindAddress>*</BindAddress>
        <Port>7878</Port>
        <SslPort>9898</SslPort>
        <EnableSsl>False</EnableSsl>
        <LaunchBrowser>True</LaunchBrowser>
        <ApiKey>f324b13a7fe3491187a5098fc4e2d57b</ApiKey>
        <AuthenticationMethod>External</AuthenticationMethod>
        <AuthenticationRequired>Enabled</AuthenticationRequired>
        <Branch>master</Branch>
        <LogLevel>info</LogLevel>
        <SslCertPath></SslCertPath>
        <SslCertPassword></SslCertPassword>
        <UrlBase></UrlBase>
        <InstanceName>Radarr</InstanceName>
        <UpdateMechanism>Docker</UpdateMechanism>
        <PostgresUser>radarr</PostgresUser>
        <PostgresPassword>Bvu!gzYJfaa9kZ</PostgresPassword>
        <PostgresPort>5432</PostgresPort>
        <PostgresHost>192.168.18.10</PostgresHost>
      </Config>
readarr:
  Image: 'lscr.io/linuxserver/readarr:develop' 
  Service:
      port: 8787
  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: true
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  Ingress:
    Enable: true
    Host: readarr.thelmalouise.ddns.net
    EnableOauth: true
    prefix: ""
  Volumes:
        config:
          type: volumenClain
          mountPath: /config
        serie:
          type: nfs
          mountPath: /books
          server: 192.168.18.10
          path: /volume1/Multimedia/Libros
        descargas:
          type: nfs 
          mountPath: /downloads
          server: 192.168.18.10
          path: /volume1/Descargas
  ConfigMap:
    config.xml: |
      <Config>
        <BindAddress>*</BindAddress>
        <Port>8787</Port>
        <SslPort>9898</SslPort>
        <EnableSsl>False</EnableSsl>
        <LaunchBrowser>True</LaunchBrowser>
        <ApiKey>f324b13a7fe3491187a5098fc4e2d57b</ApiKey>
        <AuthenticationMethod>External</AuthenticationMethod>
        <AuthenticationRequired>Enabled</AuthenticationRequired>
        <Branch>master</Branch>
        <LogLevel>info</LogLevel>
        <SslCertPath></SslCertPath>
        <SslCertPassword></SslCertPassword>
        <UrlBase></UrlBase>
        <InstanceName>readarr</InstanceName>
        <UpdateMechanism>Docker</UpdateMechanism>
        <PostgresUser>readarr</PostgresUser>
        <PostgresPassword>us7fp2QMfvDsUg</PostgresPassword>
        <PostgresPort>5432</PostgresPort>
        <PostgresHost>192.168.18.10</PostgresHost>
      </Config>

prowlarr:
  Image: 'lscr.io/linuxserver/prowlarr:develop'  
  Service:
      port: 9696
  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: true
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  Ingress:
    Enable: true
    Host: prowlarr.thelmalouise.ddns.net
    EnableOauth: true
    prefix: ""
  Volumes:
        config:
          type: volumenClain
          mountPath: /config
  ConfigMap:
    config.xml: |
      <Config>
        <BindAddress>*</BindAddress>
        <Port>9696</Port>
        <SslPort>6969</SslPort>
        <EnableSsl>False</EnableSsl>
        <LaunchBrowser>True</LaunchBrowser>
        <ApiKey>b7d26fd9d6234d5c988141c5224c9177</ApiKey>
        <AuthenticationMethod>External</AuthenticationMethod>
        <AuthenticationRequired>Enabled</AuthenticationRequired>
        <Branch>develop</Branch>
        <LogLevel>info</LogLevel>
        <SslCertPath></SslCertPath>
        <SslCertPassword></SslCertPassword>
        <UrlBase></UrlBase>
        <InstanceName>Prowlarr</InstanceName>
        <UpdateMechanism>Docker</UpdateMechanism>
        <PostgresUser>prowlarr</PostgresUser>
        <PostgresPassword>GaviBe94XG4$7</PostgresPassword>
        <PostgresPort>5432</PostgresPort>
        <PostgresHost>192.168.18.10</PostgresHost>
      </Config>
jellyseerr:
  Image: 'fallenbagel/jellyseerr'  
  Service:
      port: 5055

  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: true
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  Ingress:
    Enable: true
    Host: jellyseerr.thelmalouise.ddns.net
    prefix: ""
  Volumes:
        config:
          type: volumenClain
          mountPath: /app/config

jellyfin:
  Image: 'jellyfin/jellyfin:latest' 
  Service:
      port: 8096

  env:
    NVIDIA_DRIVER_CAPABILITIES: "compute,video,utility"
 
  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: true
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  Ingress:
    Enable: true
    Host: jellyfin.thelmalouise.ddns.net
    prefix: ""
  Volumes:
        config:
          type: volumenClain
          mountPath: /config
        peliculas:
          type: nfs
          mountPath: /movies
          server: 192.168.18.10
          path: /volume1/Multimedia/Peliculas
        serie:
          type: nfs 
          mountPath: /tv
          server: 192.168.18.10
          path: /volume1/Multimedia/Series
bazarr:
  Image: 'lscr.io/linuxserver/bazarr:latest'
  Service:
      port: 6767

  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: true
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  env:
      POSTGRES_PASSWORD: FS56A8b9cWO0hW
      POSTGRES_USER: bazarr 
      POSTGRES_DB: bazarr
  Ingress:
    Enable: true
    Host: bazarr.thelmalouise.ddns.net
    EnableOauth: true
    prefix: ""
  Volumes:
        config:
          type: volumenClain
          mountPath: /config
        peliculas:
          type: nfs
          mountPath: /movies
          server: 192.168.18.10
          path: /volume1/Multimedia/Peliculas
        serie:
          type: nfs 
          mountPath: /tv
          server: 192.168.18.10
          path: /volume1/Multimedia/Series
jackett:
  Image: 'lscr.io/linuxserver/jackett:latest'
  Service:
      port: 9117

  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: true
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  Ingress:
    Enable: true
    Host: jackett.thelmalouise.ddns.net
    EnableOauth: true
    prefix: ""
  Volumes:
        config:
          type: volumenClain
          mountPath: /config
        descargas:
          type: nfs 
          mountPath: /downloads
          server: 192.168.18.10
          path: /volume1/Descargas
flaresolverr:
  Image: 'ghcr.io/flaresolverr/flaresolverr:latest'
  Service:
      port: 8191
  PVC:
      storageClassName: microk8s-hostpath
      capacity: 1Gi
      Enable: false
  readinessProbe: 
    Seconds: 30
  livenessProbe: 
    Seconds: 30
  Ingress:
    Enable: false

# kavita:
#   Image: 'jvmilazz0/kavita:latest'
#   Service:
#       port: 5000

#   PVC:
#       storageClassName: microk8s-hostpath
#       capacity: 1Gi
#       Enable: true
#   readinessProbe: 
#     Seconds: 30
#   livenessProbe: 
#     Seconds: 30
#   Ingress:
#     Enable: true
#     Host: kavita.thelmalouise.ddns.net
#     EnableOauth: false
#     prefix: ""
#   Volumes:
#         config:
#           type: volumenClain
#           mountPath: /data
#         books:
#           type: nfs
#           mountPath: /books
#           server: 192.168.18.10
#           path: /volume1/Multimedia/Libros
        


# calibre:
#   Image: 'linuxserver/calibre-web:latest'

#   Service:
#       port: 8083
#   env:
#     DOCKER_MODS: "linuxserver/mods:universal-calibre"
#   PVC:
#       storageClassName:  microk8s-hostpath
#       capacity: 1Gi
#       Enable: true
#   readinessProbe: 
#     Seconds: 300
#   livenessProbe: 
#     Seconds: 300
#   Ingress:
#     Enable: true
#     Host: books.thelmalouise.ddns.net
#     prefix: ""
#   Volumes:
#         config:
#           type: volumenClain
#           mountPath: /config
#         books:
#           type: nfs 
#           mountPath: /books
#           server: 192.168.18.10
#           path: /volume1/Multimedia/Libros
        
# ia:
#   Image: 'mccloud/subgen' 
#   Service:
#       port: 9000
#   env:
#     WHISPER_MODEL: "medium"
#     WHISPER_THREADS: "4"
#     PROCMEDIAONPLAY: "False"
#     NAMESUBLANG: "aa"
#     SKIPIFINTERNALSUBLANG: "eng"
#     PLEXTOKEN: "plextoken"
#     PLEXSERVER: "http://plexserver:32400"
#     JELLYFINTOKEN: "token here"
#     JELLYFINSERVER: "http://jellyfin:8096"
#     WEBHOOKPORT: "9000"
#     CONCURRENT_TRANSCRIPTIONS: "2"
#     WORD_LEVEL_HIGHLIGHT: "False"
#     DEBUG: "True"
#     USE_PATH_MAPPING: "False"
#     PATH_MAPPING_FROM: "/tv"
#     TRANSCRIBE_DEVICE: "gpu"
#     CLEAR_VRAM_ON_COMPLETE: "True"
#     MODEL_PATH: "./models"
#     UPDATE: "False"
#     APPEND: "False"
#     USE_MODEL_PROMPT: "False"
#     CUSTOM_MODEL_PROMPT: ""
#     LRC_FOR_AUDIO_FILES: "True"
#     CUSTOM_REGROUP: "cm_sl=84_sl=42++++++1"


 
#   PVC:
#       storageClassName: microk8s-hostpath
#       capacity: 1Gi
#   Ingress:
#     Enable: fase
#     Host: jellyfin.thelmalouise.ddns.net
#     prefix: ""
#   Volumes:
#         config:
#           type: volumenClain
#           mountPath: /config
#         peliculas:
#           type: nfs
#           mountPath: /movies
#           server: 192.168.18.10
#           path: /volume1/Multimedia/Peliculas
#         serie:
#           type: nfs 
#           mountPath: /tv
#           server: 192.168.18.10
#           path: /volume1/Multimedia/Series



        
