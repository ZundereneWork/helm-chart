name: Deploy All Helm Charts

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  find-and-deploy-charts:
    runs-on: self-hosted

    outputs:
      chart_data: ${{ steps.set-chart.outputs.chart_data }}
      

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Find All Chart Directories
        id: set-chart
        run: |

          # Crear un array vacío para almacenar los objetos JSON
          json_array="[]"

          # Buscar carpetas que comienzan con "chart-"
          for folder in $(find . -type d -name 'chart-*' -printf '%P\n'); do
            # Extraer el nombre del release (parte después de "chart-")
            release_name="${folder#chart-}"

            # Crear un objeto JSON para esta carpeta y release
            folder_json=$(jq -n --arg folder "$folder" --arg release "$release_name" '{folder: $folder, release: $release}')

            # Añadir el objeto al array JSON
            json_array=$(echo "$json_array" | jq --argjson item "$folder_json" '. += [$item]')
          done

          # Guardar el array JSON en un archivo
          echo "$json_array" > chart-folders.json

          echo "JSON generado en 'chart-folders.json':"
          cat  chart-folders.json
          echo "chart_data=$(jq -c . < ./chart-folders.json)" >> $GITHUB_OUTPUT

      - name: Print Chart Data (Debugging)
        run: |
           echo "Chart Data: ${{ steps.set-chart.outputs.chart_data }}"
  
      - name: Fail if Chart Data is Empty
        if: ${{ steps.set-chart.outputs.chart_data == '[]' || steps.set-chart.outputs.chart_data == '' }}
        run: |
            echo "No charts found with the prefix 'chart-'. Exiting."
            exit 1

    
  deploy-charts:
    needs: [find-and-deploy-charts]
    strategy:
      matrix:
        chart: ${{ fromJson(needs.find-and-deploy-charts.outputs.chart_data) }}
    uses: ZundereneWork/reusables-workflow/.github/workflows/deploy-helm.yml@main
    with:
      namespace: ${{ matrix.chart.folder }}
      release_name: ${{ matrix.chart.release }}
      chart: ${{ matrix.chart.folder }}
      runner: self-hosted
    secrets: inherit

        
      
        
