name: Build and Push helm

on:
    workflow_dispatch: 
      inputs:
        choice:
          type: choice
          description: Make template char on push
          options:
            - app
        
jobs:
  Deploy_Up_Helm:
    runs-on: arc-runner-set
    name: 🚀 Deploy up helm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: 📝 Setup enviroment
        run: |
            echo "::group::Install yq"
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &&\
            chmod +x /usr/bin/yq
            echo "::endgroup::"
            echo "::group::Load env"
            echo NAME_CHART=$(cat ${{inputs.choice}}/Chart.yaml | yq '.name' ) >> $GITHUB_ENV
            echo VERSION=$(cat ${{inputs.choice}}/Chart.yaml | yq '.version' ) >> $GITHUB_ENV
            echo "::endgroup::"
      - name: 💽 Install kubectl
        run: | 
            echo "::group::Install kubectl"
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            mv kubectl /usr/local/bin
            echo "::endgroup::"
      - name: 💽 Install Helm
        run: | 
            echo "::group::Install helm"
            curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
            sudo apt-get install apt-transport-https --yes
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo  tee /etc/apt/sources.list.d/helm-stable-debian.list
            sudo apt-get update
            sudo apt-get install helm
            echo "::endgroup::"

      - name: 🚀 Set up kubectl and deploy helm
        run: |
          echo "::group::Install Set up kubectl and deploy helm"
          echo "${{ secrets.KUBECONFIG }}" > ./config
          export KUBECONFIG=$(pwd)/config
          kubectl config use-context microk8s
          echo "::endgroup::"

      - name: 🚀 Deply with Helm
        run: |
          echo "::group::Install deploy helm"
          helm registry login ${{ vars.REGISTRY_URL }} --username 'robot$test' --password ${{secrets.REGISTRY_PASSWORD }}
          cd ${{ inputs.choice }}
          helm lint . && helm package . 
          helm push ${{ env.NAME_CHART }}-${{ env.VERSION }}.tgz  ${{ vars.REGISTRY_OCI }}/helm-chart 
          echo "::endgroup::"
      - name: 📝 Resultado
        run: |
          echo "### Upload helm  :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "- $( helm show chart . ) " >> $GITHUB_STEP_SUMMARY
